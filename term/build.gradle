plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion
    ndkVersion project.ext.ndkVersion
    defaultConfig {
        applicationId "com.termoneplus"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion

        vectorDrawables.useSupportLibrary = true

        versionCode 401
        versionName '4.0.1'

        externalNativeBuild {
            cmake {
                arguments "-DAPPLICATION_ID:STRING=${applicationId}"
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "src/CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions "catalog"
    productFlavors {
        play {
            // Google Play store
            dimension 'catalog'
        }
        full {
            dimension 'catalog'
            versionName android.defaultConfig.versionName + "/X"
        }
    }
    if (project.hasProperty("signing.properties")) {

        Properties properties = new Properties()
        properties.load(new FileInputStream(file(project.property("signing.properties"))))

        signingConfigs {
            release {
                storeFile file(properties["store.file"])
                storePassword properties["store.password"]
                keyAlias properties["key.alias"]
                keyPassword properties["key.password"]
            }
        }

        android.buildTypes.release.signingConfig = signingConfigs.release
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    applicationVariants.all { variant ->
        variant.resValue  "string", "application_version", variant.versionName
    }
}

dependencies {
    implementation project(':emulatorview')
    implementation project(':libtermexec')

    implementation "androidx.appcompat:appcompat:1.4.2"
    implementation "com.google.android.material:material:1.4.0"
    implementation "androidx.preference:preference:1.2.0"
    implementation "androidx.annotation:annotation:1.4.0"
}

task elfcleaner(type: Exec) {
    // only unix
    commandLine 'sh', '-c', 'find build/*/stripped* -name lib*.so -exec elf-cleaner {} \\;'
}

tasks.whenTaskAdded { task ->
    if (task.name.matches('strip.*DebugSymbols')) {
        task.finalizedBy elfcleaner
    }
}
